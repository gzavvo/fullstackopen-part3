{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/persons.js","components/Notification.js","components/Alert.js","App.js","index.js"],"names":["Filter","newFilter","handleFilterChange","value","onChange","PersonForm","props","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Person","person","removePersonOf","name","number","onClick","id","Persons","persons","filter","toLowerCase","includes","map","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","message","className","Alert","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","notificationMessage","setNotificationMessage","alertMessage","setAlertMessage","useEffect","personService","initialPersons","event","target","preventDefault","existingUser","find","window","confirm","personObject","returnedPerson","setTimeout","catch","error","n","length","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b769537a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ newFilter, handleFilterChange }) => {\n  return (\n    <div>\n      filter shown with: \n      <input\n        value={newFilter}\n        onChange={handleFilterChange}\n      />\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n      <form onSubmit={props.addPerson} >\n        <div>\n          name: <input \n            value={props.newName}\n            onChange={props.handleNameChange}\n          />\n        </div>\n        <div>\n          number: <input \n            value={props.newNumber}\n            onChange={props.handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\nexport default PersonForm\n","const Person = ({ person, removePersonOf }) => {\n  return (\n    <div key={person.name}>\n      {person.name} {person.number} \n      <button onClick={() => removePersonOf(person.id)}>delete</button>\n    </div>\n  )\n}\n\nexport default Person\n","import Person from './Person'\n\nconst Persons = ({ persons, newFilter, removePersonOf }) => {\n  return (\n    <div>\n      {\n        persons\n          .filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n          .map(person => {\n            return (\n              <Person \n                key={person.name} \n                person={person}\n                removePersonOf={removePersonOf}\n              />\n            )\n          })\n      }\n    </div>\n  )\n}\n\nexport default Persons\n","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst updateNumber = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, updateNumber }\n","const Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"notification\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification\n","const Alert = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"alert\">\n      {message}\n    </div>\n  )\n}\n\nexport default Alert\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport Alert from './components/Alert'\n\nfunction App() {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [alertMessage, setAlertMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const existingUser = persons.find(person => person.name === newName)\n    if (existingUser) {\n      if (window.confirm(` ${existingUser.name} is already added to phonebook, replace the old number with a new one?`)) {\n        const personObject = {\n          ...existingUser,\n          number: newNumber\n        }\n        personService\n          .updateNumber(existingUser.id, personObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== existingUser.id ? person : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            setNotificationMessage(`Number of ${returnedPerson.name} updated`)\n            setTimeout(() => setNotificationMessage(null), 3000)\n          })\n          .catch(error => {\n            setAlertMessage(`Information of ${newName} has already been removed from server`)\n            setPersons(persons.filter(n => n.id !== existingUser.id))\n            setNewName('')\n            setNewNumber('')\n          })\n      }\n    } else {\n\n      const personObject = {\n        name: newName,\n        number: newNumber,\n        id: persons.length + 1\n      }\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(personObject))\n          setNewName('')\n          setNewNumber('')\n          setNotificationMessage(`Added ${returnedPerson.name}`)\n          setTimeout(() => setNotificationMessage(null), 3000)\n        })\n    }\n  }\n\n  const removePersonOf = (id) => {\n    const person = persons.find((person) => person.id === id)\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService\n        .remove(id)\n        .then(response => {\n          setPersons(persons.filter(n => n.id !== id))\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} />\n      <Alert message={alertMessage} />\n      <Filter \n        newFilter={newFilter} \n        handleFilterChange={handleFilterChange}\n      />\n      <h3>add a new</h3>\n      <PersonForm \n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons \n        persons={persons} \n        newFilter={newFilter}\n        removePersonOf={removePersonOf}\n      />\n    </div>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render( <App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}